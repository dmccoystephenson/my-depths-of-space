{"version":3,"file":"tactics.js","mappings":"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","sources":["webpack://tactics/webpack/universalModuleDefinition","webpack://tactics/webpack/bootstrap","webpack://tactics/webpack/runtime/define property getters","webpack://tactics/webpack/runtime/hasOwnProperty shorthand","webpack://tactics/webpack/runtime/make namespace object","webpack://tactics/./src/images.js","webpack://tactics/./src/mainScene.js","webpack://tactics/./src/input.js","webpack://tactics/./src/menuScene.js","webpack://tactics/./src/main.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tactics\"] = factory();\n\telse\n\t\troot[\"tactics\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import images from './images.json'\r\n\r\nvar ctx = null\r\n\r\nfunction setContext(context) {\r\n    ctx = context\r\n}\r\n\r\nfunction getContext() {\r\n    return ctx\r\n}\r\n\r\nfunction getImage(name) {\r\n    let img = images.filter(f => f.name === name)\r\n    return img.length > 0 ? img[0].image : null\r\n}\r\n\r\nfunction getImages() {\r\n    return images\r\n}\r\n\r\nfunction drawImage(name, x, y, srcRect) {\r\n    let img = images.filter(f => f.name === name)\r\n    if (img.length > 0) {\r\n        if (srcRect) {\r\n            ctx.drawImage(img[0].image, srcRect.x, srcRect.y, srcRect.w, srcRect.h, x, y, srcRect.w, srcRect.h)\r\n        } else {\r\n            ctx.drawImage(img[0].image, x, y)\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadImage(filename) {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = (e) => {\r\n            resolve(img)\r\n        }\r\n        img.onerror = (e) => {\r\n            console.error(`Failed to load file ${filename}:`, e)\r\n            reject(null)\r\n        }\r\n        let image = images.filter(f => f.filename === filename)\r\n        if (image.length > 0) {\r\n            img.src = filename\r\n        } else {\r\n            console.error(`Image definition matching filename ${filename} not found.`)\r\n            reject(null)\r\n        }\r\n    })\r\n}\r\n\r\nfunction loadAllImages() {\r\n    let promises = []\r\n    for (let i in images) {\r\n        let image = images[i]\r\n        promises.push(new Promise((resolve, reject) => loadImage(image.filename).then(r => {\r\n            image.image = r\r\n            resolve(r)\r\n        }).catch(e => console.error('Failed to load', image.filename, e))))\r\n    }\r\n    return Promise.allSettled(promises)\r\n}\r\n\r\nexport { loadAllImages, loadImage, drawImage, getImage, getImages, setContext, getContext }\r\n","import { getContext } from \"./images.js\"\r\n\r\nlet imu = null\r\n\r\nlet ctx = null\r\n\r\nlet tooltip = ''\r\n\r\nfunction drawFrame(delta) {\r\n    if (!ctx) {\r\n        ctx = getContext()\r\n    }\r\n    ctx.clearRect(0, 0, 240, 160)\r\n\r\n    /*ctx.save()\r\n    ctx.translate(120 - Player().x * TileSizes().x, 80 - Player().y * TileSizes().y)\r\n    DrawFOV(Player())\r\n    Player().draw()\r\n    let spriteObjs = getSpriteObjects()\r\n    for (let index in spriteObjs) {\r\n        spriteObjs[index].update(16)\r\n        spriteObjs[index].draw()\r\n    }\r\n\r\n    ctx.restore()*/\r\n\r\n    drawUI()\r\n}\r\n\r\nfunction drawUI(delta) {\r\n    if (!imu) {\r\n        imu = new imui.ImUI(ctx.canvas)\r\n        imu.font = font\r\n\r\n        imu.onUpdate = (ui) => {\r\n            ui.Element({ id: 'lblTooltip', text: tooltip, rect: { x: 0, y: 0, w: 240, h: 10 }, color: '#f1f1f1ff', highlight: '#f1f1f1ff', bgcolor: '#cccccc00' })\r\n        }\r\n    }\r\n    imu.Draw()\r\n}\r\n\r\nexport { drawFrame }","import maps from './keymapping.json'\r\n\r\nvar listening = false\r\n\r\nfunction handlerPressed (button) {\r\n  setState(button, true)\r\n}\r\n\r\nfunction handlerReleased (button) {\r\n  setState(button, false)\r\n  if (callbacks[button]) {\r\n    callbacks[button](button)\r\n  }\r\n}\r\n\r\nfunction GetInputKeys(inputType) {\r\n  inputType = inputType.toLowerCase()\r\n  return Object.keys(maps[inputType])\r\n}\r\n\r\nfunction GetInputValue(inputType, key) {\r\n  inputType = inputType.toLowerCase()\r\n  return maps[inputType][key]\r\n}\r\n\r\nvar inputState = {}\r\nvar callbacks = {}\r\n\r\nvar enabled = [ 'keyboard', 'gamepad' ]\r\n\r\nfunction setState(button, value) {\r\n  inputState[button] = value\r\n}\r\n\r\nfunction getState(button) {\r\n  if (!listening) {\r\n    return false\r\n  }\r\n  return inputState[button] ? inputState[button] : false\r\n}\r\n\r\nfunction listenerKeyDown(e) {\r\n  if (!listening) {\r\n    return\r\n  }\r\n  let inputs = Object.keys(maps.keyboard)\r\n  for (let i in inputs) {\r\n    if (e.key === maps.keyboard[inputs[i]]) {\r\n      handlerPressed(inputs[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction listenerKeyUp(e) {\r\n  if (!listening) {\r\n    return\r\n  }\r\n  console.log(e)\r\n  let inputs = Object.keys(maps.keyboard)\r\n  for (let i in inputs) {\r\n    if (e.key === maps.keyboard[inputs[i]]) {\r\n      handlerReleased(inputs[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  inputState = {}\r\n  callbacks = {}\r\n  if (enabled.includes('keyboard')) {\r\n    window.removeEventListener('keydown', listenerKeyDown)\r\n    window.removeEventListener('keyup', listenerKeyUp)\r\n    window.addEventListener('keydown', listenerKeyDown)\r\n    window.addEventListener(\"keyup\", listenerKeyUp)\r\n  }\r\n  if (enabled.includes('gamepad')) {\r\n    gameControl.on('connect', function(gamepad) {\r\n      let inputs = Object.keys(maps.gamepad)\r\n      for (let i in inputs) {\r\n        gamepad.on(maps.gamepad[inputs[i]], () => {\r\n          \r\n        }).after(maps.gamepad[inputs[i]], () => {\r\n          handlerReleased(inputs[i])\r\n        })\r\n      }\r\n    })\r\n  }\r\n  listening = false\r\n}\r\n\r\ninit()\r\n\r\nvar input = {\r\n  listen: () => {\r\n    listening = true\r\n  },\r\n  unlisten: () => {\r\n    listening = false\r\n  },\r\n  released: (button, method) => {\r\n    callbacks[button] = method\r\n  }\r\n}\r\n\r\nexport default input\r\nexport { GetInputKeys, GetInputValue }","import input, { GetInputKeys, GetInputValue } from './input.js'\r\nimport { getContext, drawImage, getImage } from \"./images.js\"\r\nimport menus from './menus.json'\r\nimport { Start } from './main.js'\r\n\r\nlet imu = null\r\n\r\nlet ctx = null\r\n\r\nvar currentMenuId = 'Main'\r\nvar currentMenuItem = 'Start'\r\nvar menuMethods = {\r\n    menu_GameSetup: () => {\r\n        Start()\r\n    }\r\n}\r\n\r\nlet menuDx = 0\r\nlet menuDy = 0\r\n\r\nfunction StartMenu(id) {\r\n    input.listen()\r\n    let menu = menus.filter(f => f.id === currentMenuId)[0]\r\n    let menuItems = menu.Options\r\n    let menuItem = menuItems.filter(f => f.text === currentMenuItem)[0]\r\n\r\n    input.released('moveDown', () => {\r\n        let index = menuItems.findIndex(f => f.text === currentMenuItem)\r\n        index++\r\n        if (index >= menuItems.length) {\r\n            index = 0\r\n        }\r\n        currentMenuItem = menuItems[index].text\r\n    })\r\n    input.released('moveUp', () => {\r\n        let index = menuItems.findIndex(f => f.text === currentMenuItem)\r\n        index--\r\n        if (index < 0) {\r\n            index = menuItems.length - 1\r\n        }\r\n        currentMenuItem = menuItems[index].text\r\n    })\r\n    input.released('attack', () => {\r\n        if (menuItem.onSelect) {\r\n            menuMethods[menuItem.onSelect]()\r\n        }\r\n    })\r\n}\r\n\r\nfunction drawFrame(delta) {\r\n    if (!ctx) {\r\n        ctx = getContext()\r\n    }\r\n    ctx.clearRect(0, 0, 240, 160)\r\n\r\n    drawUI(delta)\r\n}\r\n\r\nfunction drawUI(delta) {\r\n    if (!imu) {\r\n        imu = new imui.ImUI(ctx.canvas)\r\n        imu.font = font\r\n        imu.onUpdate = (ui) => {\r\n            //ui.Element({ id: 'imgGamename', type: 'Image', x: 10, y: 10, image: getImage('title') })\r\n            let menu = menus.filter(f => f.id === currentMenuId)[0]\r\n            let menuItems = menu.Options\r\n\r\n            let dy = menuDy + 30\r\n            for (let i in menuItems) {\r\n                let item = menuItems[i].text\r\n                let menuItem = menuItems[i]\r\n                let colr = item === currentMenuItem ? menu.Style.SelectColor : menuItem.onSelect ? menu.Style.SelectableColor : menu.Style.Color\r\n                ui.Element({ id: 'lblMenu' + currentMenuId + item, text: `${currentMenuItem === item ? '>' : ' '}${item}${currentMenuItem === item ? '<' : ' ' }`, rect: { x: menuDx, y: dy, w: 64, h: 8 }, color: colr, highlight: colr, bgcolor: '#cccccc00' })\r\n                dy += 12\r\n            }\r\n        }\r\n    }\r\n    imu.Draw()\r\n}\r\n\r\nexport { drawFrame, StartMenu }","import images from './images.js'\r\nimport sfx from './sfx.js'\r\nimport music from './music.js'\r\nimport sprites from './sprites.js'\r\nimport { setContext, loadAllImages } from './images.js'\r\nimport { drawFrame as drawMain } from './mainScene.js'\r\nimport { drawFrame as drawMainMenu, StartMenu } from './menuScene.js'\r\nimport { set, setDictionary } from './grammar.js'\r\nimport input from './input.js'\r\n\r\nvar dateNow = Date.now()\r\nvar dateThen = Date.now()\r\n\r\nvar targetDelta = 16 // Roughly 60fps by default\r\n\r\nvar currentScene = 'mainMenu'\r\n\r\nfunction setTargetFrameRate(target) {\r\n    targetDelta = parseInt(1000 / target) // Number of ms divided by target fps\r\n}\r\n\r\nfunction requestAnimationFrame() {\r\n    dateNow = Date.now()\r\n    let delta = dateNow - dateThen\r\n    if (delta >= targetDelta) {\r\n        drawFrame(delta)\r\n        dateThen = dateNow\r\n    }\r\n    window.requestAnimationFrame(requestAnimationFrame)\r\n}\r\n\r\n/**\r\n * Draws the animation frame.\r\n * @param {number} delta Number of ms since last frame.\r\n */\r\nfunction drawFrame(delta) {\r\n    if (currentScene === 'mainMenu') {\r\n        drawMainMenu(delta)\r\n    } else if (currentScene === 'main') {\r\n        drawMain(delta)\r\n    }\r\n}\r\n\r\nasync function StartMainMenu() {\r\n    await loadAllImages()\r\n\r\n    let canvas = document.getElementById('maincanvas')\r\n    let ratio = canvas.width / canvas.height\r\n    canvas.style.height = window.innerHeight + 'px'\r\n    canvas.style.width = window.innerHeight * ratio + 'px'\r\n    window.addEventListener('resize', () => {\r\n        canvas.style.height = window.innerHeight + 'px'\r\n        canvas.style.width = window.innerHeight * ratio + 'px'\r\n      })\r\n\r\n    setTargetFrameRate(60)\r\n    setContext(canvas.getContext('2d'))\r\n\r\n    StartMenu()\r\n\r\n    window.requestAnimationFrame(requestAnimationFrame)\r\n}\r\n\r\nasync function Start() {\r\n\r\n    input.unlisten()\r\n   \r\n    // Init(CreatePlayer('@', digger.Floors()))\r\n    // Player().slots = [melee, ranged, area]\r\n    // AddTemples(3)\r\n    currentScene = 'main'\r\n}\r\n\r\nexport { Start, StartMainMenu }"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ctx","getContext","imu","tooltip","listening","handlerReleased","button","setState","callbacks","inputState","enabled","listenerKeyDown","e","inputs","keys","i","listenerKeyUp","console","log","includes","window","removeEventListener","addEventListener","gameControl","on","gamepad","after","listen","unlisten","released","method","currentMenuId","currentMenuItem","menuMethods","menu_GameSetup","Start","menuDx","menuDy","dateNow","Date","now","dateThen","targetDelta","currentScene","requestAnimationFrame","clearRect","imui","ImUI","canvas","font","onUpdate","ui","menu","f","id","menuItems","Options","dy","item","text","menuItem","colr","Style","SelectColor","onSelect","SelectableColor","Color","Element","rect","x","y","w","h","color","highlight","bgcolor","Draw","async","StartMainMenu","promises","image","push","Promise","resolve","reject","loadImage","filename","img","Image","onload","onerror","error","length","src","then","r","catch","allSettled","loadAllImages","document","getElementById","ratio","width","height","context","style","innerHeight","parseInt","filter","index","findIndex","StartMenu"],"sourceRoot":""}